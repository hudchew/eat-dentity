import { config } from 'dotenv';
import { resolve } from 'path';

// Load environment variables FIRST before importing any modules
config({ path: resolve(__dirname, '../.env.local') });

// Verify API key is loaded
if (!process.env.GEMINI_API_KEY) {
  console.error('‚ùå GEMINI_API_KEY not found in .env.local');
  process.exit(1);
}

console.log('‚úÖ GEMINI_API_KEY loaded:', process.env.GEMINI_API_KEY.substring(0, 10) + '...');

// Import after env vars are loaded
import { generatePersonaInsight } from '../lib/gemini';

async function testPersonaInsight() {
  console.log('üß™ Testing Gemini AI Insight Generation...\n');

  const testCases = [
    {
      title: '‡∏ô‡∏±‡∏Å‡∏£‡∏ö‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î ‡∏ú‡∏π‡πâ‡πÅ‡∏ö‡∏Å‡πÇ‡∏•‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏Ç‡∏°‡∏±‡∏ô',
      stats: { fried: 55, vegetable: 5, meat: 30, coffee: 10 },
    },
    {
      title: '‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏¢‡∏£‡∏±‡∏Å‡∏©‡πå‡πÇ‡∏•‡∏Å',
      stats: { vegetable: 70, fruit: 20, water: 10 },
    },
    {
      title: '‡∏£‡∏≤‡∏ä‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏ó‡∏±‡∏Å‡∏©‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏ô',
      stats: { dessert: 60, sweet: 30, carbs: 10 },
    },
  ];

  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i];
    console.log(`\nüìù Test Case ${i + 1}: ${testCase.title}`);
    console.log(`üìä Stats: ${JSON.stringify(testCase.stats)}`);
    console.log('‚è≥ Generating AI Insight...\n');

    try {
      const insight = await generatePersonaInsight(testCase.title, testCase.stats);
      console.log('‚úÖ AI Insight Generated:');
      console.log('‚îÄ'.repeat(80));
      console.log(insight);
      console.log('‚îÄ'.repeat(80));
    } catch (error) {
      console.error('‚ùå Error:', error);
    }

    // Wait a bit between requests to avoid rate limiting
    if (i < testCases.length - 1) {
      await new Promise((resolve) => setTimeout(resolve, 2000));
    }
  }

  console.log('\n‚úÖ All tests completed!');
}

testPersonaInsight().catch(console.error);

